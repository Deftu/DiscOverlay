name: "Build and publish GitHub release"

on:
    workflow_dispatch:

env:
    TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_SIGNING_PRIVATE_KEY }}

jobs:
    publish-tauri:
        permissions:
            contents: write
        strategy:
            fail-fast: false
            matrix:
                include:
                    - platform: "macos-latest" # for Arm based macs (M1 and above).
                      args: "--target aarch64-apple-darwin"
                    - platform: "macos-latest" # for Intel based macs.
                      args: "--target x86_64-apple-darwin"
                    - platform: "ubuntu-22.04" # for Tauri v1 you could replace this with ubuntu-20.04.
                      args: ""
                    - platform: "windows-latest"
                      args: ""

        runs-on: ${{ matrix.platform }}
        steps:
            - uses: actions/checkout@v4

            - name: Install Rust stable
              uses: dtolnay/rust-toolchain@stable
              with:
                  # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
                  targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

            - name: Install dependencies (Ubuntu only)
              if: matrix.platform == 'ubuntu-22.04' # This must match the platform value defined above.
              run: |
                  sudo apt-get update
                  sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

            - name: Install PNPM
              uses: pnpm/action-setup@v2
              with:
                  version: 9
                  run_install: false

            - name: Setup node
              uses: actions/setup-node@v4
              with:
                  node-version: lts/*
                  cache: pnpm

            - name: Install frontend dependencies
              run: pnpm install

            - uses: tauri-apps/tauri-action@v0
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              with:
                  includeUpdaterJson: true
                  updaterJsonPreferNsis: true
                  tagName: discoverlay-v__VERSION__
                  releaseName: "DiscOverlay v__VERSION__"
                  releaseBody: "See the assets to download this version and install."
                  releaseDraft: true
                  prerelease: false
                  args: ${{ matrix.args }}
